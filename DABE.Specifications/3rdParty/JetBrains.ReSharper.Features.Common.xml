<?xml version="1.0"?>
<doc>
    <assembly>
        <name>JetBrains.ReSharper.Features.Common</name>
    </assembly>
    <members>
        <member name="T:JetBrains.ReSharper.Features.Common.AsyncTreeBrowser.TreeAsyncModel">
            <summary>
            Describes model which is built on demand
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.CodePreview.CodePanel.#ctor">
            <summary>
            For design-time only
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.CodePreview.CodePanel.#ctor(JetBrains.ProjectModel.ISolution,JetBrains.UI.WindowManagement.WindowFrame)">
            <summary>
            Use this constructor
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.CodePreview.CodePanel.Display(System.Collections.Generic.IList{JetBrains.DocumentModel.DocumentRange},JetBrains.Util.OneToListMap{JetBrains.DocumentModel.DocumentRange,JetBrains.TextControl.Markup.IHighlighter},JetBrains.DocumentModel.DocumentRange)">
            <summary>
            Displays given set of document ranges.
            </summary>
            <param name="ranges">Document ranges to display</param>
            <param name="highlightingMap">Additional highlighters in document ranges</param>
            <param name="scrollRange">Optional range with scrolled position. DocumentRange.Invalid if no scrolling needed</param>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.CodePreview.CodePanel.Show(JetBrains.ReSharper.Psi.IDeclaredElement,System.Collections.Generic.IList{JetBrains.DocumentModel.DocumentRange})">
            <summary>
            Displays IDeclaredElement except namespaces with all necessary features.
            </summary>
            <param name="declaredElement">IDeclaredElement to display.</param>
            <param name="highlightedRanges">Additional ranges to highlight.</param>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.CodePreview.CodePanel.Show(JetBrains.Util.TextRange,JetBrains.ProjectModel.IProjectFile,System.Collections.Generic.IList{JetBrains.DocumentModel.DocumentRange})">
            <summary>
            Displays text range in a project file with all necessary features.
            </summary>
            <param name="documentTextRange">Text range to display.</param>
            <param name="projectFile">Project file with given text range</param>
            <param name="highlightedRanges">Additional ranges that should be displayed</param>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.CodePreview.CodePanel.Show(JetBrains.ProjectModel.IProjectFile,System.Collections.Generic.IList{JetBrains.DocumentModel.DocumentRange})">
            <summary>
            Displays file except namespaces with all necessary features.
            </summary>
            <param name="projectFile">File to display.</param>
            <param name="highlightedRanges">Additional ranges that should be displayed</param>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.CodePreview.CodePanel.ShowDefaultMessage">
            <summary>
            Displays default message about code panel.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.CodePreview.CodePanel.GetCodePanelRange(JetBrains.DocumentModel.DocumentRange)">
            <summary>
            TODO: temporary method?
            </summary>
            <param name="realDocumentRange"></param>
            <returns></returns>
        </member>
        <member name="E:JetBrains.ReSharper.Features.Common.CodePreview.CodePanel.CodePanelChanged">
            <summary>
            Fired when contents of code panel begin to display new code.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Common.GoToByName.GotoCacheElementController`1.myCacheToMatcher">
            <summary>
            Caches the model created on caches, use the <see cref="M:JetBrains.ReSharper.Features.Common.GoToByName.GotoCacheElementController`1.GetCacheElementModel(JetBrains.ReSharper.Features.Common.GoToByName.LibrariesFlag)"/> function for getting the lazy-inited items from the cache.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Common.GoToByName.GotoCacheElementController`1.ItemsPassFilter">
            <summary>
            A filter that specifies which items should be let into the output list.
            NOTE: in most cases, you should use <see cref="M:JetBrains.ReSharper.Features.Common.GoToByName.GotoCacheElementController`1.RestrictItemsPassFilter(System.Func{`0,System.Boolean})"/>, so that to avoid interfering with the internal filtering.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.GoToByName.GotoCacheElementController`1.GetCacheElementModel(JetBrains.ReSharper.Features.Common.GoToByName.LibrariesFlag)">
            <summary>
            Gets an either libs or no-libs model, lazy-initializing it as needed.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.GoToByName.GotoCacheElementController`1.RestrictItemsPassFilter(System.Func{`0,System.Boolean})">
            <summary>
            ANDs the given condition with the existing <see cref="F:JetBrains.ReSharper.Features.Common.GoToByName.GotoCacheElementController`1.ItemsPassFilter"/>.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.GoToByName.GotoCacheElementController`1.FuncPassAllFilter(`0)">
            <summary>
            The default dummy pass-all filter for the <see cref="F:JetBrains.ReSharper.Features.Common.GoToByName.GotoCacheElementController`1.ItemsPassFilter"/>.
            Must be a function for the <see cref="M:System.Object.Equals(System.Object)"/> operation to work appropriately.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.GoToByName.GotoCacheElementController`1.UpdateItems(System.String,System.Func{System.Collections.Generic.IEnumerable{JetBrains.UI.PopupMenu.Impl.JetPopupMenuItem},JetBrains.UI.GotoByName.GotoByNameController.AddItemsBehavior,System.Boolean})">
            <summary>
            When the items get dirty (<see cref="F:JetBrains.UI.GotoByName.GotoByNameController.ItemsGottenDirty"/>), this function is called on the secondary thread.
            The function should be checking for <paramref name="checkCancelled"/> every so often.
            </summary>
            <param name="filterString">The filtering string against which the items list should be produced.</param>
            <param name="checkCancelled">Call from time to time, on <c>True</c>, abort immediately.</param>
            <param name="itemsConsumer">A function you can use to add items to the output collection in a thread-safe manner. The function checks for the items limit and returns whether more items can be added.</param>
        </member>
        <member name="P:JetBrains.ReSharper.Features.Common.GoToByName.GotoCacheElementController`1.LibrariesFlagAutoSwitch">
            <summary>
            Gets or sets whether when a solution-only search fails a solution-and-libraries search is performed automatically.
            <c>True</c> by default.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.GoToByName.GotoCacheElementController`1.ICacheElementMatcher.GetElements(JetBrains.ReSharper.Feature.Services.Filtering.IdentifierMatcher,System.Func{`0,System.Boolean},System.Int32,JetBrains.Application.CheckForInterrupt,System.Action)">
             <summary>
             Gets the cache elements for the given filter.
             </summary>
            <param name="matcher">
              Matcher for the names.
            </param>
            <param name="filter">
              Further filters the list of results.
            </param>
            <param name="limit">
              Maximum number of items to return, or
              <c>0</c>
              if unlimited.
            </param>
            <param name="funcIsCancelled">
              A function to check periodically to abort the lengthy process.
            </param>
            <param name="itemProcessed"></param>
            <returns>The list of collected elements.</returns>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Common.GoToByName.GotoDeclaredElementController">
            <summary>
            Controls the <see cref="T:JetBrains.UI.GotoByName.GotoByNameModel"/> for various <see cref="T:JetBrains.ReSharper.Psi.IDeclaredElement"/>-based items.
            See the <c>Create…</c> methods for individual model types.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.GoToByName.GotoDeclaredElementController.#ctor(JetBrains.ProjectModel.ISolution,JetBrains.ReSharper.Psi.IPsiModule,JetBrains.ReSharper.Features.Common.GoToByName.LibrariesFlag,System.String)">
            <summary>
            Inits the instance.
            </summary>
            <param name="solution">Base ctor param.</param>
            <param name="project">Base ctor param.</param>
            <param name="librariesFlag">Base ctor param.</param>
            <param name="sDeclaredElementKindDisplayName"><c>"namespace"</c> or <c>"type"</c> or whatever human-readable declared element kind string.</param>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.GoToByName.GotoDeclaredElementController.CreateGotoNamespaceController(JetBrains.ProjectModel.ISolution,JetBrains.ReSharper.Features.Common.GoToByName.LibrariesFlag)">
            <summary>
            Controller of the <see cref="T:JetBrains.UI.GotoByName.GotoByNameModel"/> for namespaces.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.GoToByName.GotoDeclaredElementController.CreateGotoNamespaceModel(JetBrains.ProjectModel.ISolution,JetBrains.ReSharper.Features.Common.GoToByName.LibrariesFlag)">
            <summary>
            <see cref="T:JetBrains.UI.GotoByName.GotoByNameModel"/> for namespaces.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.GoToByName.GotoDeclaredElementController.CreateGotoTypeController(JetBrains.ProjectModel.ISolution,JetBrains.ReSharper.Features.Common.GoToByName.LibrariesFlag)">
            <summary>
            Controller of the <see cref="T:JetBrains.UI.GotoByName.GotoByNameModel"/> for types (classes, structs, etc).
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.GoToByName.GotoDeclaredElementController.CreateGotoTypeModel(JetBrains.ProjectModel.ISolution,JetBrains.ReSharper.Features.Common.GoToByName.LibrariesFlag)">
            <summary>
            <see cref="T:JetBrains.UI.GotoByName.GotoByNameModel"/> for types (classes, structs, etc).
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.GoToByName.GotoDeclaredElementController.ExecuteItem(JetBrains.UI.PopupMenu.Impl.JetPopupMenuItem)">
            <summary>
            Called when an item is to be executed.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Common.GoToByName.GotoDeclaredElementController.Matcher">
            <summary>
            Fetches the cache elements against a matcher.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Common.GoToByName.GotoFileController.ItemsPassFilter">
            <summary>
            A filter that specifies which items should be let into the output list.
            NOTE: in most cases, you should use <see cref="M:JetBrains.ReSharper.Features.Common.GoToByName.GotoFileController.RestrictItemsPassFilter(System.Func{JetBrains.ProjectModel.IProjectFile,System.Boolean})"/>, so that to avoid interfering with the internal filtering.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.GoToByName.GotoFileController.RestrictItemsPassFilter(System.Func{JetBrains.ProjectModel.IProjectFile,System.Boolean})">
            <summary>
            ANDs the given condition with the existing <see cref="F:JetBrains.ReSharper.Features.Common.GoToByName.GotoFileController.ItemsPassFilter"/>.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.GoToByName.GotoFileController.FuncPassAllFilter(JetBrains.ProjectModel.IProjectFile)">
            <summary>
            The default dummy pass-all filter for the <see cref="F:JetBrains.ReSharper.Features.Common.GoToByName.GotoFileController.ItemsPassFilter"/>.
            Must be a function for the <see cref="M:System.Object.Equals(System.Object)"/> operation to work appropriately.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.GoToByName.GotoFileController.ExecuteItem(JetBrains.UI.PopupMenu.Impl.JetPopupMenuItem)">
            <summary>
            Called when an item is to be executed.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.GoToByName.GotoFileController.UpdateItems(System.String,System.Func{System.Collections.Generic.IEnumerable{JetBrains.UI.PopupMenu.Impl.JetPopupMenuItem},JetBrains.UI.GotoByName.GotoByNameController.AddItemsBehavior,System.Boolean})">
            <summary>
            When the items get dirty (<see cref="F:JetBrains.UI.GotoByName.GotoByNameController.ItemsGottenDirty"/>), this function is called on the secondary thread.
            </summary>
            <param name="filterString">The filtering string against which the items list should be produced.</param>
            <param name="itemsConsumer">A function you can use to add items to the output collection in a thread-safe manner. The function checks for the items limit and returns whether more items can be added.</param>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.GoToByName.GotoSymbolController.ExecuteItem(JetBrains.UI.PopupMenu.Impl.JetPopupMenuItem)">
            <summary>
            Called when an item is to be executed.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Common.GoToByName.DeclaredElementMenuItemFormatter">
            <summary>
            Formats a declared element into a menu item descriptor, suitable for the GotoByName-style lists.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.GoToByName.DeclaredElementMenuItemFormatter.Format(JetBrains.ReSharper.Psi.IDeclaredElement,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Formats a declared element into a menu item descriptor, suitable for the GotoByName-style lists.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Common.GoToByName.LibrariesFlag">
            <summary>
            Defines whether the libraries should be included or not when searching for items.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Features.Common.Occurences.OccurenceBrowserSettings.AutoExpandResults">
            <summary>
            Whether the search results tree and such should be expanded by default.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Common.Options.CodeStyleSharingPage">
            <summary>
            Code style settings sharing, import and export.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Common.Options.CodeStyleSharingPage.ExternalFilePath">
            <summary>
            Mirrors the external file path editbox value.
            Binded in <see cref="M:JetBrains.ReSharper.Features.Common.Options.CodeStyleSharingPage.InitControls"/>.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Common.Options.CodeStyleSharingPage.SharingMode">
            <summary>
            Code style settings sharing mode, that is edited with the radio buttons.
            Binded in <see cref="M:JetBrains.ReSharper.Features.Common.Options.CodeStyleSharingPage.InitControls"/>.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.Options.CodeStyleSharingPage.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Features.Common.Options.CodeStyleSharingPage.AnySolution">
            <summary>
            Get any solution for code formatting preview purposes
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:JetBrains.ReSharper.Features.Common.Options.CodeStyleSharingPage.CodeStyleSettings" -->
        <member name="T:JetBrains.ReSharper.Features.Common.Options.CommonLanguagePage">
            <summary>
            The “common” page in the Languages section, representing the non-per-language but language-related settings.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Common.Options.EnvironmentPage">
            <summary>
            Root options page for the global environment options.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.Options.EnvironmentPage.OnOk">
            <summary>
            Invoked when OK button in the options dialog is pressed.
            If the page returns <c>false</c>, the the options dialog won't be closed, and focus will be put into this page.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.Options.EnvironmentPage.ValidatePage">
            <summary>
            Check if the settings on the page are consistent, and page could be closed.
            </summary>
            <returns><c>true</c> if page data is consistent.</returns>
        </member>
        <member name="P:JetBrains.ReSharper.Features.Common.Options.EnvironmentPage.Control">
            <summary>
            Control to be shown as page.
            May be <c>Null</c> if the page does not have any UI.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Features.Common.Options.EnvironmentPage.Id">
            <summary>
            Gets the ID of this option page.
            <see cref="T:JetBrains.UI.Options.IOptionsDialog"/> or <see cref="T:JetBrains.UI.Options.OptionsPageDescriptor"/> could be used to retrieve the <see cref="T:JetBrains.UI.Options.OptionsManager"/> out of it.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Common.Options.LanguagesPage">
            <summary>
            Root options page for the global per-language options.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Common.Options.Languages.AspxPage">
            <summary>
            Root options page for the ASP.NET language options.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.Options.Languages.AspxPage.OnOk">
            <summary>
            Invoked when OK button in the options dialog is pressed.
            If the page returns <c>false</c>, the the options dialog won't be closed, and focus will be put into this page.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.Options.Languages.AspxPage.ValidatePage">
            <summary>
            Check if the settings on the page are consistent, and page could be closed.
            </summary>
            <returns><c>true</c> if page data is consistent.</returns>
        </member>
        <member name="P:JetBrains.ReSharper.Features.Common.Options.Languages.AspxPage.Control">
            <summary>
            Control to be shown as page.
            May be <c>Null</c> if the page does not have any UI.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Features.Common.Options.Languages.AspxPage.Id">
            <summary>
            Gets the ID of this option page.
            <see cref="T:JetBrains.UI.Options.IOptionsDialog"/> or <see cref="T:JetBrains.UI.Options.OptionsPageDescriptor"/> could be used to retrieve the <see cref="T:JetBrains.UI.Options.OptionsManager"/> out of it.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Common.Options.Languages.BuildScriptsPage">
            <summary>
            Root options page for the build scripts options.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.Options.Languages.BuildScriptsPage.OnOk">
            <summary>
            Invoked when OK button in the options dialog is pressed.
            If the page returns <c>false</c>, the the options dialog won't be closed, and focus will be put into this page.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.Options.Languages.BuildScriptsPage.ValidatePage">
            <summary>
            Check if the settings on the page are consistent, and page could be closed.
            </summary>
            <returns><c>true</c> if page data is consistent.</returns>
        </member>
        <member name="P:JetBrains.ReSharper.Features.Common.Options.Languages.BuildScriptsPage.Control">
            <summary>
            Control to be shown as page.
            May be <c>Null</c> if the page does not have any UI.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Features.Common.Options.Languages.BuildScriptsPage.Id">
            <summary>
            Gets the ID of this option page.
            <see cref="T:JetBrains.UI.Options.IOptionsDialog"/> or <see cref="T:JetBrains.UI.Options.OptionsPageDescriptor"/> could be used to retrieve the <see cref="T:JetBrains.UI.Options.OptionsManager"/> out of it.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Common.Options.Languages.CsharpPage">
            <summary>
            Root options page for the C# language options.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.Options.Languages.CsharpPage.OnOk">
            <summary>
            Invoked when OK button in the options dialog is pressed.
            If the page returns <c>false</c>, the the options dialog won't be closed, and focus will be put into this page.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.Options.Languages.CsharpPage.ValidatePage">
            <summary>
            Check if the settings on the page are consistent, and page could be closed.
            </summary>
            <returns><c>true</c> if page data is consistent.</returns>
        </member>
        <member name="P:JetBrains.ReSharper.Features.Common.Options.Languages.CsharpPage.Control">
            <summary>
            Control to be shown as page.
            May be <c>Null</c> if the page does not have any UI.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Features.Common.Options.Languages.CsharpPage.Id">
            <summary>
            Gets the ID of this option page.
            <see cref="T:JetBrains.UI.Options.IOptionsDialog"/> or <see cref="T:JetBrains.UI.Options.OptionsPageDescriptor"/> could be used to retrieve the <see cref="T:JetBrains.UI.Options.OptionsManager"/> out of it.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Common.Options.Languages.VbnetPage">
            <summary>
            Root options page for the VB.NET language options.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.Options.Languages.VbnetPage.OnOk">
            <summary>
            Invoked when OK button in the options dialog is pressed.
            If the page returns <c>false</c>, the the options dialog won't be closed, and focus will be put into this page.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.Options.Languages.VbnetPage.ValidatePage">
            <summary>
            Check if the settings on the page are consistent, and page could be closed.
            </summary>
            <returns><c>true</c> if page data is consistent.</returns>
        </member>
        <member name="P:JetBrains.ReSharper.Features.Common.Options.Languages.VbnetPage.Control">
            <summary>
            Control to be shown as page.
            May be <c>Null</c> if the page does not have any UI.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Features.Common.Options.Languages.VbnetPage.Id">
            <summary>
            Gets the ID of this option page.
            <see cref="T:JetBrains.UI.Options.IOptionsDialog"/> or <see cref="T:JetBrains.UI.Options.OptionsPageDescriptor"/> could be used to retrieve the <see cref="T:JetBrains.UI.Options.OptionsManager"/> out of it.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Common.Options.Languages.XamlPage">
            <summary>
            Root options page for the XAML language options.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.Options.Languages.XamlPage.OnOk">
            <summary>
            Invoked when OK button in the options dialog is pressed.
            If the page returns <c>false</c>, the the options dialog won't be closed, and focus will be put into this page.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.Options.Languages.XamlPage.ValidatePage">
            <summary>
            Check if the settings on the page are consistent, and page could be closed.
            </summary>
            <returns><c>true</c> if page data is consistent.</returns>
        </member>
        <member name="P:JetBrains.ReSharper.Features.Common.Options.Languages.XamlPage.Control">
            <summary>
            Control to be shown as page.
            May be <c>Null</c> if the page does not have any UI.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Features.Common.Options.Languages.XamlPage.Id">
            <summary>
            Gets the ID of this option page.
            <see cref="T:JetBrains.UI.Options.IOptionsDialog"/> or <see cref="T:JetBrains.UI.Options.OptionsPageDescriptor"/> could be used to retrieve the <see cref="T:JetBrains.UI.Options.OptionsManager"/> out of it.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Common.Options.Languages.XmlPage">
            <summary>
            Root options page for the XML language options.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.Options.Languages.XmlPage.OnOk">
            <summary>
            Invoked when OK button in the options dialog is pressed.
            If the page returns <c>false</c>, the the options dialog won't be closed, and focus will be put into this page.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.Options.Languages.XmlPage.ValidatePage">
            <summary>
            Check if the settings on the page are consistent, and page could be closed.
            </summary>
            <returns><c>true</c> if page data is consistent.</returns>
        </member>
        <member name="P:JetBrains.ReSharper.Features.Common.Options.Languages.XmlPage.Control">
            <summary>
            Control to be shown as page.
            May be <c>Null</c> if the page does not have any UI.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Features.Common.Options.Languages.XmlPage.Id">
            <summary>
            Gets the ID of this option page.
            <see cref="T:JetBrains.UI.Options.IOptionsDialog"/> or <see cref="T:JetBrains.UI.Options.OptionsPageDescriptor"/> could be used to retrieve the <see cref="T:JetBrains.UI.Options.OptionsManager"/> out of it.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Common.Options.ToolsPage">
            <summary>
            Root options page for the global per-language options.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.Options.ToolsPage.OnOk">
            <summary>
            Invoked when OK button in the options dialog is pressed.
            If the page returns <c>false</c>, the the options dialog won't be closed, and focus will be put into this page.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.Options.ToolsPage.ValidatePage">
            <summary>
            Check if the settings on the page are consistent, and page could be closed.
            </summary>
            <returns><c>true</c> if page data is consistent.</returns>
        </member>
        <member name="P:JetBrains.ReSharper.Features.Common.Options.ToolsPage.Control">
            <summary>
            Control to be shown as page.
            May be <c>Null</c> if the page does not have any UI.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Features.Common.Options.ToolsPage.Id">
            <summary>
            Gets the ID of this option page.
            <see cref="T:JetBrains.UI.Options.IOptionsDialog"/> or <see cref="T:JetBrains.UI.Options.OptionsPageDescriptor"/> could be used to retrieve the <see cref="T:JetBrains.UI.Options.OptionsManager"/> out of it.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Common.UI.CompletionPickerEdit">
            <summary>
            An edit-like control for placing on the dialog boxes that picks a type name from a tree or completion list.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Common.UI.CompletionPickerEdit.CommitCompletionListInputString">
            <summary>
            Immediately commits the <see cref="F:JetBrains.ReSharper.Features.Common.UI.CompletionPickerEdit.Text"/> to the completion lists's model.
            Wired to the deferred binding when the completion list menu is lazy-created.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Common.UI.CompletionPickerEdit.CompletionListExecuteSelectedItem">
            <summary>
            Exec sel menu item, if any.
            Returns exec success flag (<see cref="M:JetBrains.UI.PopupMenu.Impl.JetPopupMenuDoc.ExecuteSelectedItem"/>).
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Common.UI.CompletionPickerEdit.CompletionListSelectNextItem">
            <summary>
            Selects the next item in the completion drop-down list, eg when up/down arrows are used in the edit box.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Common.UI.CompletionPickerEdit.IsCompletionListVisible">
            <summary>
            Gets whether we've ruled out that the completion list should be visible at the moment.
            This means <see cref="F:JetBrains.ReSharper.Features.Common.UI.CompletionPickerEdit.CompletionListShowMode"/> is <see cref="F:JetBrains.ReSharper.Features.Common.UI.CompletionPickerEdit.CompletionListShowModes.Show"/> and the <see cref="F:JetBrains.ReSharper.Features.Common.UI.CompletionPickerSettings.CompletionModel"/>'s <see cref="F:JetBrains.UI.GotoByName.GotoByNameModel.Items"/> are not empty (and the model exists, in the first place).
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Common.UI.CompletionPickerEdit.myBtnTreeMouseDownAcquired">
            <summary>
            We open the tree on mouse-down (in which case the click event should be ignored), but in case the button is triggered by keyboard, the click should be processed.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Common.UI.CompletionPickerEdit.myEvtUpdateTextBeforeCaret">
            <summary>
            As we can't (so it seems) get the event of caret movement in the edit box, we'd udpate it every so often. Probably the caret position can't change without a Windows message on the control, so we'd apply the change after each message, with a small delay needed just to group multiple consequent messages together.
            GEvent is better than BeginInvoke because the latter adds to the messages itself and cannot guarantee all fo the dependent messages go thru before it executes.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Common.UI.CompletionPickerEdit.CaretPosition">
            <summary>
            Gives out the current caret position in the edit box, or the selection start position.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Common.UI.CompletionPickerEdit.CompletionListShowMode">
            <summary>
            Whether the completion list is allowed to be shown at the moment. Other filters could apply (eg will not be actually visible if there are no items).
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Common.UI.CompletionPickerEdit.Settings">
            <summary>
            Gets or sets the settings that define the behavior of the picker, like what it picks and which functionality is available.
            Can be set only once.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Common.UI.CompletionPickerEdit.Text">
            <summary>
            Gets or sets the text of the editbox the user is typing.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Common.UI.CompletionPickerEdit.TextBeforeCaret">
            <summary>
            Gets or sets the text of the editbox the user is typing, up to the current caret position or the selection start. Could be used as the completion prefix.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.UI.CompletionPickerEdit.ExecuteCompletionListItem(JetBrains.UI.PopupMenu.Impl.JetPopupMenuItem)">
            <summary>
            If menu is shown, selects the given item and applies its text.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.UI.CompletionPickerEdit.CompletionListHide(JetBrains.ReSharper.Features.Common.UI.CompletionPickerEdit.CompletionListShowModeTransition)">
            <summary>
            Hides the completion list, either the soft or the hard way.
            Modifies <see cref="F:JetBrains.ReSharper.Features.Common.UI.CompletionPickerEdit.CompletionListShowMode"/> based on its present value and the <paramref name="flag"/>.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.UI.CompletionPickerEdit.CompletionListShow(JetBrains.ReSharper.Features.Common.UI.CompletionPickerEdit.CompletionListShowModeTransition)">
            <summary>
            Shows the completion list, either the soft or the hard way.
            Modifies <see cref="F:JetBrains.ReSharper.Features.Common.UI.CompletionPickerEdit.CompletionListShowMode"/> based on its present value and the <paramref name="flag"/>.
            Eg a soft-show won't actually show if currently in <see cref="F:JetBrains.ReSharper.Features.Common.UI.CompletionPickerEdit.CompletionListShowModes.HideHard"/> mode.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.UI.CompletionPickerEdit.Init_CompletionList_LazyCreate(System.IDisposable)">
            <summary>
            Implements menu lazy-creation. Does nothing if already created.
            </summary>
            <param name="disLazyCreate">Disconnects from lazy creation, making sure it actually runs only once.</param>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.UI.CompletionPickerEdit.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.Control"></see> and its child controls and optionally releases the managed resources.
            </summary>
            
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.UI.CompletionPickerEdit.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Layout"></see> event.
            </summary>
            
            <param name="levent">A <see cref="T:System.Windows.Forms.LayoutEventArgs"></see> that contains the event data. </param>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.UI.CompletionPickerEdit.OnLostFocus(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.LostFocus"></see> event.
            </summary>
            
            <param name="e">An <see cref="T:System.EventArgs"></see> that contains the event data. </param>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Common.UI.CompletionPickerEdit.CompletionListShowModes">
            <summary>
            Whether the completion list is allowed to be shown at the moment. Other filters could apply (eg will not be actually visible if there are no items).
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Common.UI.CompletionPickerEdit.CompletionListShowModes.Show">
            <summary>
            The completion list could be visible if other factors (like items>0) are met.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Common.UI.CompletionPickerEdit.CompletionListShowModes.HideSoft">
            <summary>
            The completion list has been hidden indeliberately, and should transition to <see cref="F:JetBrains.ReSharper.Features.Common.UI.CompletionPickerEdit.CompletionListShowModes.Show"/> when there's an excuse.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Common.UI.CompletionPickerEdit.CompletionListShowModes.HideHard">
            <summary>
            The completion list has been focibly hidden. Should not show again unless explicitly requested by the user.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Common.UI.CompletionPickerEdit.CompletionListShowModeTransition">
            <summary>
            Flag for transitioning between <see cref="T:JetBrains.ReSharper.Features.Common.UI.CompletionPickerEdit.CompletionListShowModes"/>.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Common.UI.CompletionPickerEdit.CompletionListShowModeTransition.Soft">
            <summary>
            Switches softly, cannot break <see cref="F:JetBrains.ReSharper.Features.Common.UI.CompletionPickerEdit.CompletionListShowModes.HideHard"/>. This is for handling implicit activities.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Common.UI.CompletionPickerEdit.CompletionListShowModeTransition.Hard">
            <summary>
            Switches forcibly, always transitions to the desired state. Must be done on explicit user actions only.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Common.UI.CompletionPickerPopupDialog">
            <summary>
            A self-contained popup type chooser that can be employed in case you'd like to use the <see cref="T:JetBrains.ReSharper.Features.Common.UI.CompletionPickerEdit"/>, but have no place to host it as a control and want to show it in a popup dialog.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Common.UI.CompletionPickerPopupDialog.Settings">
            <summary>
            Gets or sets the settings that define the behavior of the picker, like what it picks and which functionality is available.
            Can be set only once.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Common.UI.CompletionPickerPopupDialog.TypeChooserText">
            <summary>
            Gets or sets the text contents of the type chooser.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.UI.CompletionPickerPopupDialog.OnVisibleChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.VisibleChanged"></see> event.
            </summary>
            
            <param name="e">The <see cref="T:System.EventArgs"></see> that contains the event data. </param>
        </member>
        <member name="P:JetBrains.ReSharper.Features.Common.UI.CompletionPickerPopupDialog.LabelText">
            <summary>
            Gets or sets the text displayed on the label.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Common.UI.CompletionPickerSettings">
            <summary>
            Specifies the configuration for the <see cref="T:JetBrains.ReSharper.Features.Common.UI.CompletionPickerEdit"/> control.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Common.UI.CompletionPickerSettings.CompletionModel">
            <summary>
            Gets or sets the flat model that works for completing the text you type into the control.
            Can be set only once.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Common.UI.CompletionPickerSettings.ExpandPickerItem">
            <summary>
            When the tree picker is building its model, supplies the items for the next level.
            Fill the <see cref="P:JetBrains.DataFlow.InOutEventArgs`2.Out"/> list with the children of <see cref="P:JetBrains.DataFlow.InOutEventArgs`2.In"/>, who must not be <c>Null</c>.
            When <see cref="P:JetBrains.DataFlow.InOutEventArgs`2.In"/> is <c>Null</c>, root items are requested. 
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Common.UI.CompletionPickerSettings.PickerItemPresenter">
            <summary>
            Gets or sets the presenter for the picker (drop-down tree) items.
            This value can only be set once.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Common.UI.CompletionPickerSettings.TranslateCompletionItem">
            <summary>
            When a completion list item is executed, its text is inserted into the edit box.
            In case the text should be modified before insertion (eg FQN instead of a short name), this event should be sinked.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Common.UI.CompletionPickerSettings.TranslatePickerItem">
            <summary>
            When a picker tree item is executed, its text is inserted into the edit box.
            In case the text should be modified before insertion (eg FQN instead of a short name), this event should be sinked.
            Setting the <see cref="P:JetBrains.DataFlow.InOutEventArgs`2.Out"/> to <c>Null</c> prevents the item from being picked (eg for group nodes that are only present to hold the child elements).
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.UI.CompletionPickerSettings.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Common.UI.CompletionPickerTreeDropDown">
            <summary>
            Implements the popup (dropdown) of the <see cref="T:JetBrains.ReSharper.Features.Common.UI.CompletionPickerEdit"/> that displays a tree picker.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Common.UI.CompletionPickerTreeDropDown.myWantsResize">
            <summary>
            Fires when the control would like to be reasked of its desired size.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.UI.CompletionPickerTreeDropDown.IsAvailable(JetBrains.ReSharper.Features.Common.UI.CompletionPickerSettings)">
            <summary>
            Checks whether the setting define a model for the drop-down tree picker.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.UI.CompletionPickerTreeDropDown.ExecuteFocusedNode">
            <summary>
            Takes the focused node, tries to execute it by applying the translated text to the <see cref="F:JetBrains.ReSharper.Features.Common.UI.CompletionPickerTreeDropDown.SelectedItemText"/> property and closing the view.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.UI.CompletionPickerTreeDropDown.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.KeyDown"></see> event.
            </summary>
            
            <param name="args">A <see cref="T:System.Windows.Forms.KeyEventArgs"></see> that contains the event data. </param>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.UI.CompletionPickerTreeDropDown.OnLeave(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Leave"></see> event.
            </summary>
            
            <param name="e">An <see cref="T:System.EventArgs"></see> that contains the event data. </param>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.UI.CompletionPickerTreeDropDown.OnLostFocus(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.LostFocus"></see> event.
            </summary>
            
            <param name="e">An <see cref="T:System.EventArgs"></see> that contains the event data. </param>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.UI.CompletionPickerTreeDropDown.GetDesiredSize(JetBrains.UI.IGraphicsContainer,System.Drawing.Size)">
            <summary>
            Performs the bottom-up layouting stage, when the control calculates its desired size using the given constraints.
            Should give generally the same results as <see cref="T:JetBrains.CommonControls.IConstrainableControl"/>, but could employ the <paramref name="gc"/> device context for the sake of optimization.
            </summary>
            <param name="gc">The device context to measure against.</param>
            <param name="limit">The maximum available space (that could affect the shape of the control, or strip down unnecessary calculations over the invisible items).
            May be a <see cref="T:System.Drawing.Size"/> with width and height equal to <see cref="F:System.Int32.MaxValue"/>, which means that the size is not limited.</param>
            <returns>The desired size, must be no larger than <paramref name="limit"/>.</returns>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.UI.CompletionPickerTreeDropDown.SetLayout(JetBrains.UI.LayoutResult)">
            <summary>
            Tells the control the details about the new layout applied to it by the controlling entity in conjunction with some <see cref="T:JetBrains.UI.IPopupLayouter"/>.
            Typically, the control need not apply the given size and location because that should be done by the controlling entity.
            The control may change its presentation in response to the layouting details, for example, whether it's attached to the top or the bottom of the anchoring rect.
            </summary>
            <param name="layout">The layouting details.</param>
        </member>
        <member name="P:JetBrains.ReSharper.Features.Common.UI.CompletionPickerTreeDropDown.Settings">
            <summary>
            Gets the settings that define the tree and some of its interactions.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Features.Common.UI.CompletionPickerTreeDropDown.ShowWithoutActivation">
            <summary>
            Gets a value indicating whether the window will be activated when it is shown.
            </summary>
            
            <returns>
            True if the window will not be activated when it is shown; otherwise, false. The default is false.
            </returns>
            
        </member>
        <member name="P:JetBrains.ReSharper.Features.Common.UI.CompletionPickerTreeDropDown.AutoActivate">
            <summary>
            Gets or sets whether the control should be activated initially when it's shown.
            The typical implementation for a form is to return a negative of this value from the <see cref="P:System.Windows.Forms.Form.ShowWithoutActivation"/> override.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Features.Common.UI.CompletionPickerTreeDropDown.WantsResize">
            <summary>
            Fires when the control would like to be reasked of its desired size.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Common.UI.DeclaredElementChooser">
            <summary>
            Base class for <see cref="T:JetBrains.ReSharper.Psi.IDeclaredElement"/>-based choosers.
            Those are used for setting up the <see cref="T:JetBrains.ReSharper.Features.Common.UI.CompletionPickerEdit"/>s.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Common.UI.DeclaredElementChooser.CompletionItemsPassFilter">
            <summary>
            Gets or sets the filter that narrows down the completion items (in the completion menu).
            Can be assigned only once.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Common.UI.DeclaredElementChooser.PickerItemsPassFilter">
            <summary>
            Gets or sets the filter that narrows down the picker items (in the drop-down picker tree).
            This is usually a superset of the <see cref="F:JetBrains.ReSharper.Features.Common.UI.DeclaredElementChooser.CompletionItemsPassFilter"/> items, as it has to include the nodes that contain the useful items. Items under the excluded nodes are excluded automatically.
            Can be assigned only once.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.UI.DeclaredElementChooser.GetFqName(JetBrains.ReSharper.Psi.IDeclaredElement,JetBrains.ReSharper.Psi.PsiLanguageType)">
            <summary>
            Rip FQ Name from a declared element, in the specified language, suitable for use by the picker owner.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.UI.DeclaredElementChooser.AllPassDeclaredElementFilter(JetBrains.ReSharper.Psi.IDeclaredElement)">
            <summary>
            An empty filter to assign by default.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.UI.DeclaredElementChooser.CreateCompletionController">
            <summary>
            Creates the chooser-specific completion controller.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.UI.DeclaredElementChooser.GetDeclarationsCache">
            <summary>
            Gets the declarations cache for the current models (on solution, either libs or no-libs).
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.UI.DeclaredElementChooser.GetItems(JetBrains.ReSharper.Psi.IDeclaredElement)">
            <summary>
            Retrieves nested items visible to solution for specified element
            </summary>
            <param name="element"><c>Null</c> for the root.</param>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.UI.DeclaredElementChooser.GetNestedItems(JetBrains.ReSharper.Psi.IDeclaredElement,JetBrains.ReSharper.Psi.Caches.IDeclarationsCache)">
            <summary>
            Expands the level of the tree picker.
            </summary>
            <param name="element"><c>Null</c> for the root.</param>
            <param name="cache">Declarations cache</param>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.UI.DeclaredElementChooser.InitCompletion">
            <summary>
            Inits the plain completion support.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.UI.DeclaredElementChooser.InitPicker">
            <summary>
            Inits the tree drop-down support.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Features.Common.UI.DeclaredElementChooser.Language">
            <summary>
            The language this instance is working in.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Features.Common.UI.DeclaredElementChooser.Libraries">
            <summary>
            Defines whether the libraries should be included or not when searching for items.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Features.Common.UI.DeclaredElementChooser.Project">
            <summary>
            Gets the project we're browsing (if specified).
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Features.Common.UI.DeclaredElementChooser.Settings">
            <summary>
            Gets the settings applicable to the <see cref="T:JetBrains.ReSharper.Features.Common.UI.CompletionPickerEdit"/>.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Features.Common.UI.DeclaredElementChooser.Solution">
            <summary>
            Gets the solution we're browsing.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Common.UI.FileChooser">
            <summary>
            Base class for <see cref="T:JetBrains.ReSharper.Psi.IDeclaredElement"/>-based choosers.
            Those are used for setting up the <see cref="T:JetBrains.ReSharper.Features.Common.UI.CompletionPickerEdit"/>s.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Common.UI.FileChooser.CompletionItemsPassFilter">
            <summary>
            Gets or sets the filter that narrows down the completion items (in the completion menu).
            Can be assigned only once.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Common.UI.FileChooser.PickerItemsPassFilter">
            <summary>
            Gets or sets the filter that narrows down the picker items (in the drop-down picker tree).
            This is usually a superset of the <see cref="F:JetBrains.ReSharper.Features.Common.UI.FileChooser.CompletionItemsPassFilter"/> items, as it has to include the nodes that contain the useful items. Items under the excluded nodes are excluded automatically.
            Can be assigned only once.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.UI.FileChooser.AllPassProjectFileFilter(JetBrains.ProjectModel.IProjectFile)">
            <summary>
            An empty filter to assign by default.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.UI.FileChooser.InitPicker">
            <summary>
            Inits the tree drop-down support.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.UI.FileChooser.CreateCompletionController">
            <summary>
            Creates the chooser-specific completion controller.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.UI.FileChooser.InitCompletion">
            <summary>
            Inits the plain completion support.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Features.Common.UI.FileChooser.Settings">
            <summary>
            Gets the settings applicable to the <see cref="T:JetBrains.ReSharper.Features.Common.UI.CompletionPickerEdit"/>.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Features.Common.UI.FileChooser.Solution">
            <summary>
            Gets the solution we're browsing.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Common.UI.NamespaceChooser">
            <summary>
            Customizes the <see cref="T:JetBrains.ReSharper.Features.Common.UI.CompletionPickerEdit"/> for choosing namespaces.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.UI.NamespaceChooser.CreateSettings(JetBrains.ProjectModel.ISolution,JetBrains.ProjectModel.IProject,JetBrains.ReSharper.Features.Common.GoToByName.LibrariesFlag,JetBrains.ReSharper.Psi.PsiLanguageType)">
            <summary>
            Creates settings for supplying into the <see cref="T:JetBrains.ReSharper.Features.Common.UI.CompletionPickerEdit"/>.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.UI.NamespaceChooser.TryGetNamespace(System.String)">
            <summary>
            Tries to look up a declared element for its FQ Name in the current <see cref="P:JetBrains.ReSharper.Features.Common.UI.DeclaredElementChooser.Language"/>.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.UI.NamespaceChooser.CreateCompletionController">
            <summary>
            Creates the chooser-specific completion controller.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Common.UI.TypeChooser">
            <summary>
            Customizes the <see cref="T:JetBrains.ReSharper.Features.Common.UI.CompletionPickerEdit"/> for choosing types.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.UI.TypeChooser.CreateSettings(JetBrains.ProjectModel.ISolution,JetBrains.ReSharper.Features.Common.GoToByName.LibrariesFlag,JetBrains.ReSharper.Psi.PsiLanguageType)">
            <summary>
            Creates settings for supplying into the <see cref="T:JetBrains.ReSharper.Features.Common.UI.CompletionPickerEdit"/>.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.UI.TypeChooser.TryGetTypeElement(System.String)">
            <summary>
            Tries to look up a declared element for its FQ Name in the current <see cref="P:JetBrains.ReSharper.Features.Common.UI.DeclaredElementChooser.Language"/>.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Common.UI.TypeChooser.CreateCompletionController">
            <summary>
            Creates the chooser-specific completion controller.
            </summary>
        </member>
    </members>
</doc>
